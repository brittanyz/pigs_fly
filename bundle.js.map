{"version":3,"sources":["webpack:///webpack/bootstrap 97686d523c0392a2556a","webpack:///./game.js","webpack:///./frontend/trees.js","webpack:///./frontend/walker.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC,cAAc;AACjD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;;;;;;;ACpFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACpBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 97686d523c0392a2556a","const Tree = require(\"./frontend/trees\");\nconst Walker = require('./frontend/walker');\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById('canvas');\n  const ctx = canvas.getContext('2d');\n  const walker = new Walker();\n  const game = new Game(document, ctx, walker);\n  game.displayRoad();\n  walker.walk(ctx);\n  game.run();\n});\n\n\nclass Game {\n\n  constructor(document, ctx, walker) {\n    this.walker = walker;\n    this.tree = new Tree();\n    this.xCord = 780;\n    this.secondxCord = 400;\n    this.yCord = 320;\n    this.timer = 7;\n    this.i = Math.floor(Math.random() * 6);\n    this.document = document;\n    this.ctx = ctx;\n    this.interval = {};\n    this.count = 0;\n  }\n\n  run(){\n    this.document.addEventListener('keypress', (e) => {\n      if (e.keyCode === 115) {\n        this.start(this.i, this.xCord, this.timer, this.tree);\n      }\n      if (e.keyCode === 113) {\n        // s to start, q to quit\n        clearInterval(this.interval);\n        this.ctx.clearRect(0, 0, 800, 320);\n      }\n      if (e.keyCode === 32) {\n        this.walker.jump(this.ctx, this.walker.man[3], 30, 60, this.count);\n      }\n    });\n  }\n\n  displayRoad() {\n    //##### random rocks #####\n    // for (let i = 0; i < 60; i++) {\n    //   let x = Math.random() * 800;\n    //   let y = Math.random() * (340 - 322) + 322;\n    //   this.ctx.rect(x, y, 5, 1);\n    //   this.ctx.fill();\n    // }\n    this.ctx.rect(0, 320, 800, 3);\n    this.ctx.fill();\n  }\n\n  start(i, x, timer, t) {\n    this.interval = setInterval( () => {\n      this.ctx.clearRect(x, 220, 70, 100);\n      this.ctx.drawImage(t.trees[i], x--, 220, 60, 100);\n\n      // collision\n      if ((x === this.walker.x && this.walker.y + 60 > 220) ||\n          (x + 55 === this.walker.x && this.walker.y + 60 > 220)) {\n         clearInterval(this.interval);\n         this.ctx.clearRect(x, 220, 70, 100);\n         this.walker.die(this.ctx, this.walker.man[3], 30, 60);\n       }\n\n       // start new tree if current tree is off the canvas\n      if (x === -70) {\n        this.count++;\n        if (this.count % 2 === 0) { this.timer--; }\n        clearInterval(this.interval);\n        this.xCord = 780;\n        i = parseInt(Math.random() * 6);\n        this.start(i, this.xCord, timer, t);\n      }\n    }, this.timer);\n  }\n\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./game.js\n// module id = 0\n// module chunks = 0","class Tree {\n\n  constructor() {\n    this.tree1 = new Image();\n    this.tree1.src = './images/tree1.png';\n    this.tree3 = new Image();\n    this.tree3.src = './images/tree3.png';\n    this.tree5 = new Image();\n    this.tree5.src = './images/tree5.png';\n    this.tree6 = new Image();\n    this.tree6.src = './images/tree6.png';\n    this.tree4 = new Image();\n    this.tree4.src = './images/tree4.png';\n    this.tree8 = new Image();\n    this.tree8.src = './images/tree8.png';\n\n    this.trees = [this.tree1, this.tree4, this.tree3, this.tree5, this.tree6, this.tree8];\n  }\n}\n\nmodule.exports = Tree;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/trees.js\n// module id = 1\n// module chunks = 0","class Walker {\n\n  constructor() {\n    this.walker1 = new Image();\n    this.walker1.src = './images/man1.png';\n    this.walker2 = new Image();\n    this.walker2.src = './images/man2.png';\n    this.walker3 = new Image();\n    this.walker3.src = './images/man3.png';\n    this.walker4 = new Image();\n    this.walker4.src = './images/man4.png';\n    this.skull = new Image();\n    this.skull.src = './images/skull.png';\n\n    // this.jumped = false;\n    this.stroll = null;\n    this.dead = false;\n    this.x = 100;\n    this.y = 260;\n    this.time = 6;\n\n    this.man = [this.walker1, this.walker2, this.walker3, this.walker4];\n  }\n\n  jump (ctx, img, width, height, count) {\n    console.log(count);\n    let up = true;\n    clearInterval(this.stroll);\n    if (this.y === 260) {\n      const jumping = setInterval( () => {\n        if (this.dead) {\n          ctx.rect(0, 320, 800, 3);\n          ctx.fill();\n          // ctx.rotate(20 * Math.PI/180);\n        }\n        ctx.clearRect(this.x, this.y, width, height);\n        if (this.y >= 95 && up) {\n          if (this.y === 95) {up = false;}\n          this.y--;\n        }\n        else this.y++;\n        ctx.drawImage(img, this.x, this.y, width, height);\n        if (this.y === 260 && !this.dead) {\n          this.walk(ctx);\n          clearInterval(jumping);\n        }\n        if (count % 5 === 1) {\n          this.time -= 0.002;\n        }\n      }, this.time);\n    }\n  }\n\n  walk (ctx) {\n    let i = 0;\n    this.stroll = setInterval( () => {\n      i = (i + 1) % 4;\n      ctx.clearRect(50, 260, 30, 60);\n      ctx.drawImage(this.man[i], 100, 260, 30, 60);\n    }, 100);\n  }\n\n  die(ctx, img, width, height) {\n    this.jump(ctx, img, width, height);\n    this.dead = true;\n  }\n\n\n}\n\nmodule.exports = Walker;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/walker.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}